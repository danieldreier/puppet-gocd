---
roles:

  # General Purpose Roles
  # =====================
  base:
    private_networks:
      - {auto_network: true}
    provisioners:
      - {type: hosts}

  el-stop-firewall:
    provisioners:
      - {type: shell, inline: 'service iptables stop'}
      - {type: shell, inline: 'chkconfig iptables off'}

  # Adds /usr/local/bin to the PATH
  el-fix-path:
    provisioners:
      - type: shell
        inline: |
          echo "export PATH=$PATH:/usr/local/bin" > /etc/profile.d/path_fix.sh

  1gb-memory:
    providers:
      - type: virtualbox
        customize:
          - [modifyvm, !ruby/sym id, '--memory', 1024]
      - type: vmware_fusion
        vmx:
          memsize: 1024

  2gb-memory:
    providers:
      - type: virtualbox
        customize:
          - [modifyvm, !ruby/sym id, '--memory', 2048, "--cpus", "8", "--ioapic", "on"]
      - type: vmware_fusion
        vmx:
          memsize: 2048

  4gb-memory:
    providers:
      - type: virtualbox
        customize:
          - [modifyvm, !ruby/sym id, '--memory', 4096]
      - type: vmware_fusion
        vmx:
          memsize: 4096


  # Puppet Open Source Roles
  # ========================
  el-6-repos:
    depreciated-role: 'Use poss-yum-repos and el-6-epel instead'
    provisioners:
      - type: shell
        inline: |
          if yum list epel-release > /dev/null 2>&1; then
            echo 'EPEL repo present.'
          else
            echo 'Adding EPEL repos.'
            rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
          fi

          if yum list puppetlabs-release > /dev/null 2>&1; then
            echo 'PL repos present.'
          else
            echo 'Adding PL repos.'
            rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm
          fi

  el-6-epel:
    provisioners:
      - type: shell
        inline: |
          if rpm --quiet -q epel-release; then
            echo 'EPEL repo present.'
          else
            echo 'Adding EPEL repos.'
            rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
          fi

  el-6-ruby193:
    provisioners:
      - type: shell
        inline: |-
          yum install -y centos-release-SCL
          yum install -y ruby193-ruby-devel

          # The EOF must be quoted to prevent shell expansion.
          tee /etc/profile.d/enable-scl-ruby.sh << "EOF"
          # Enable ruby193 by default
          source /opt/rh/ruby193/enable
          # Place scripts installed by ruby193 gems on the PATH
          export PATH=/opt/rh/ruby193/root/usr/local/bin:$PATH
          EOF

          source /opt/rh/ruby193/enable

          if ruby -e "begin require 'json'; rescue LoadError; exit(1); end"; then
            echo "JSON library available."
          else
            echo "Installing json_pure gem."
            gem install --no-rdoc --no-ri json_pure
          fi

          if ruby -e "begin require 'rgen'; rescue LoadError; exit(1); end"; then
            echo "RGen library available."
          else
            echo "Installing rgen gem."
            gem install --no-rdoc --no-ri rgen
          fi

  # NOTE: You will need to apply the el-6-epel role before using this in order
  # for libyaml to be available.
  el-6-ruby200:
    provisioners:
      - type: shell
        inline: |-
          yum install -y https://www.softwarecollections.org/en/scls/rhscl/ruby200/epel-6-x86_64/download/rhscl-ruby200-epel-6-x86_64-1-2.noarch.rpm
          yum install -y ruby200-ruby-devel

          # The EOF must be quoted to prevent shell expansion.
          tee /etc/profile.d/enable-scl-ruby.sh << "EOF"
          # Enable ruby200 by default
          source /opt/rh/ruby200/enable
          # Place scripts installed by ruby193 gems on the PATH
          export PATH=/opt/rh/ruby200/root/usr/local/bin:$PATH
          EOF

          source /opt/rh/ruby200/enable

          if ruby -e "begin require 'json'; rescue LoadError; exit(1); end"; then
            echo "JSON library available."
          else
            echo "Installing json_pure gem."
            gem install --no-rdoc --no-ri json_pure
          fi

          if ruby -e "begin require 'rgen'; rescue LoadError; exit(1); end"; then
            echo "RGen library available."
          else
            echo "Installing rgen gem."
            gem install --no-rdoc --no-ri rgen
          fi

  poss-yum-repos:
    provisioners:
      - type: shell
        inline: | # Configure yum.puppetlabs.com on supported platforms.
          if rpm --quiet -q puppetlabs-release; then
            echo 'Puppet Labs repo present.'
          else
            if [ -f /etc/fedora-release ]; then
              RH_DIST='fedora'
            else
              RH_DIST='el'
            fi
            RH_VERS=$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))

            echo "Adding Puppet Labs repo for $RH_DIST $RH_VERS."

            rpm -ivh "http://yum.puppetlabs.com/puppetlabs-release-$RH_DIST-$RH_VERS.noarch.rpm"
          fi

  poss-apt-repos:
    provisioners:
      - type: shell
        inline: | # Configure apt.puppetlabs.com on supported platforms.
          dpkg -s puppetlabs-release | grep -q '^Status:.* installed' || {
            apt-get install -y curl
            curl -O http://apt.puppetlabs.com/puppetlabs-release-$(lsb_release -c -s).deb
            dpkg -i puppetlabs-release-$(lsb_release -c -s).deb
            apt-get -y -f -m update
          }

  poss-envpuppet:
    synced_folders:
      - {host_path: 'src/puppetlabs', guest_path: '/puppetlabs'}
    provisioners:
      - type: shell
        # The EOF must be quoted to prevent shell expansion of the second line.
        inline: |-
          tee /etc/profile.d/envpuppet.sh << "EOF"
          export ENVPUPPET_BASEDIR=/puppetlabs
          eval $($ENVPUPPET_BASEDIR/puppet/ext/envpuppet)
          EOF

          source /etc/profile.d/envpuppet.sh

          puppet resource group puppet ensure=present
          puppet resource user puppet ensure=present gid=puppet shell='/sbin/nologin'

